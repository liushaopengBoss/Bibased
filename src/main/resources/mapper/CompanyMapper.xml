<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zzti.bibased.dao.mapper.CompanyMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zzti.bibased.dto.Company" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="company_full_name" property="companyFullName" jdbcType="VARCHAR" />
    <result column="company_url" property="companyUrl" jdbcType="VARCHAR" />
    <result column="company_logo" property="companyLogo" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="industry_field" property="industryField" jdbcType="VARCHAR" />
    <result column="finance_stage" property="financeStage" jdbcType="VARCHAR" />
    <result column="position_num" property="positionNum" jdbcType="INTEGER" />
    <result column="resume_rate" property="resumeRate" jdbcType="INTEGER" />
    <result column="position_slogan" property="positionSlogan" jdbcType="VARCHAR" />
    <result column="include" property="include" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="op_time" property="opTime" jdbcType="BIGINT" />
    <result column="is_valid" property="isValid" jdbcType="TINYINT" />
    <result column="last_ver" property="lastVer" jdbcType="BIGINT" />
    <result column="date_version" property="dateVersion" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    company_name,company_full_name, company_url,company_logo, city,industry_field, finance_stage, position_num, resume_rate,
    position_slogan, include,date_version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from company
    where id = #{id,jdbcType=INTEGER} AND  date_version = (
      SELECT  date_version  from company order BY date_version Desc limit 1
    )
  </select>

  <insert id="insert" parameterType="cn.edu.zzti.bibased.dto.Company" >
    insert into company ( company_name,company_full_name, company_url,company_logo,city,
      industry_field, finance_stage, position_num, 
      resume_rate, position_slogan, include, 
      create_time, op_time, is_valid, 
      last_ver)
    values ( #{companyName,jdbcType=VARCHAR}, #{companyFullName,jdbcType=VARCHAR}, #{companyUrl,jdbcType=VARCHAR},#{companyLogo,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},
      #{industryField,jdbcType=VARCHAR}, #{financeStage,jdbcType=VARCHAR}, #{positionNum,jdbcType=INTEGER}, 
      #{resumeRate,jdbcType=INTEGER}, #{positionSlogan,jdbcType=VARCHAR}, #{include,jdbcType=VARCHAR}, 
      UNIX_TIMESTAMP(now()), UNIX_TIMESTAMP(now()), 1,0)
  </insert>
  <insert id="batchInsert" parameterType="cn.edu.zzti.bibased.dto.Company" >
    insert into company ( company_name,company_full_name, company_url,company_logo,city,
    industry_field, finance_stage, position_num,
    resume_rate, position_slogan, include,
    create_time, op_time, is_valid,
    last_ver)
    values
    <foreach collection="list" item="company" index="index" separator="," >
    ( #{company.companyName,jdbcType=VARCHAR},#{company.companyFullName,jdbcType=VARCHAR}, #{company.companyUrl,jdbcType=VARCHAR},#{company.companyLogo,jdbcType=VARCHAR}, #{company.city,jdbcType=VARCHAR},
    #{company.industryField,jdbcType=VARCHAR}, #{company.financeStage,jdbcType=VARCHAR}, #{company.positionNum,jdbcType=INTEGER},
    #{company.resumeRate,jdbcType=INTEGER}, #{company.positionSlogan,jdbcType=VARCHAR}, #{company.include,jdbcType=VARCHAR},
      UNIX_TIMESTAMP(now()),UNIX_TIMESTAMP(now()), 1, 0)
    </foreach>
  </insert>

  <select id="queryCityCompanNum" resultMap="BaseResultMap">
     SELECT city,count(distinct company_name) as position_num from company  where include = #{include} GROUP BY city
  </select>
  <select id="queryFinanceStageCompanNum" resultMap="BaseResultMap">
     SELECT finance_stage ,count(distinct company_name) as position_num from company  where include = #{include} GROUP BY finance_stage
  </select>
  <select id="queryIndustryCompanNum" resultMap="BaseResultMap">
    SELECT city,industry_field ,count(distinct company_name) as position_num from company where include = #{include} GROUP BY industry_field ,city
  </select>
</mapper>